{"ast":null,"code":"var _jsxFileName = \"/Users/brianrice/Desktop/BugTracker/BugTracker1/frontend/src/Views/Pages/viewBugs.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getBugs } from '../../Controllers/Redux/bugSlice';\nimport BugCard from '../Components/bugCard/bugCard';\nimport BugView from '../Components/bugCard/BugView/bugview';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _s(() => {\n  _s();\n\n  const [Display_Bug, Set_Display_Bug] = useState({\n    name: \"\",\n    isDisplayed: false\n  });\n  const dispatch = useDispatch();\n  const {\n    bugs\n  } = useSelector(state => state);\n  useEffect(() => {\n    dispatch(getBugs());\n  }, [bugs.length < 1]);\n\n  function BugsClicked(name) {\n    Set_Display_Bug({\n      isDisplayed: !Display_Bug.isDisplayed,\n      name: name\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [bugs.map((bug, key) => /*#__PURE__*/_jsxDEV(BugCard, {\n      bug: bug,\n      clicked: BugsClicked\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this)), Display_Bug.isDisplayed && /*#__PURE__*/_jsxDEV(BugView, {\n      bug: bugs.filter(bug => {\n        return bug.name == Display_Bug.name;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 41\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}, \"VJ7MYeRSW2k6hUe3LNzeMs0N0b8=\", false, function () {\n  return [useDispatch, useSelector];\n});","map":{"version":3,"sources":["/Users/brianrice/Desktop/BugTracker/BugTracker1/frontend/src/Views/Pages/viewBugs.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","getBugs","BugCard","BugView","Display_Bug","Set_Display_Bug","name","isDisplayed","dispatch","bugs","state","length","BugsClicked","map","bug","key","filter"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAOC,OAAP,QAAqB,kCAArB;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,OAAP,MAAoB,uCAApB;;AAEA,kBAAe,MAAM;AAAA;;AAEjB,QAAM,CAACC,WAAD,EAAcC,eAAd,IAAiCP,QAAQ,CAAC;AAC5CQ,IAAAA,IAAI,EAAE,EADsC;AAE5CC,IAAAA,WAAW,EAAE;AAF+B,GAAD,CAA/C;AAIA,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAM;AAACU,IAAAA;AAAD,MAAST,WAAW,CAACU,KAAK,IAAGA,KAAT,CAA1B;AAEAb,EAAAA,SAAS,CAAC,MAAI;AACVW,IAAAA,QAAQ,CAACP,OAAO,EAAR,CAAR;AACH,GAFQ,EAEP,CAACQ,IAAI,CAACE,MAAL,GAAc,CAAf,CAFO,CAAT;;AAIA,WAASC,WAAT,CAAqBN,IAArB,EAA0B;AACtBD,IAAAA,eAAe,CAAC;AACZE,MAAAA,WAAW,EAAE,CAACH,WAAW,CAACG,WADd;AAEZD,MAAAA,IAAI,EAACA;AAFO,KAAD,CAAf;AAIH;;AAGD,sBACI;AAAK,IAAA,SAAS,EAAG,gBAAjB;AAAA,eACKG,IAAI,CAACI,GAAL,CAAS,CAACC,GAAD,EAAKC,GAAL,kBACN,QAAE,OAAF;AAAqB,MAAA,GAAG,EAAED,GAA1B;AAA+B,MAAA,OAAO,EAAEF;AAAxC,OAAgBG,GAAhB;AAAA;AAAA;AAAA;AAAA,YADH,CADL,EAIKX,WAAW,CAACG,WAAZ,iBAA2B,QAAC,OAAD;AAAS,MAAA,GAAG,EAAEE,IAAI,CAACO,MAAL,CAAaF,GAAD,IAAO;AAAC,eAAOA,GAAG,CAACR,IAAJ,IAAYF,WAAW,CAACE,IAA/B;AAAoC,OAAxD;AAAd;AAAA;AAAA;AAAA;AAAA,YAJhC;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CA9BD;AAAA,UAMqBP,WANrB,EAOmBC,WAPnB;AAAA","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport{getBugs} from '../../Controllers/Redux/bugSlice'\nimport BugCard from '../Components/bugCard/bugCard'\nimport BugView from '../Components/bugCard/BugView/bugview'\n\nexport default () => {\n\n    const [Display_Bug, Set_Display_Bug] = useState({\n        name: \"\",\n        isDisplayed: false\n    })\n    const dispatch = useDispatch();\n    const {bugs} = useSelector(state =>state);\n\n    useEffect(()=>{\n        dispatch(getBugs());\n    },[bugs.length < 1])\n\n    function BugsClicked(name){\n        Set_Display_Bug({\n            isDisplayed: !Display_Bug.isDisplayed,\n            name:name\n        })\n    }\n\n\n    return (\n        <div className = 'page-container'>\n            {bugs.map((bug,key)=>(\n                < BugCard key ={key} bug={bug} clicked={BugsClicked}/>\n            ))}\n            {Display_Bug.isDisplayed && <BugView bug={bugs.filter((bug)=>{return bug.name == Display_Bug.name})}/>}\n\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}